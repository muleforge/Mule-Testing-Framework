<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
    xmlns:file="http://www.mulesource.org/schema/mule/file/2.2"
    xmlns:ftp="http://www.mulesource.org/schema/mule/ftp/2.2"
    xmlns:http="http://www.mulesource.org/schema/mule/http/2.2"
    xmlns:jdbc="http://www.mulesource.org/schema/mule/jdbc/2.2"
    xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.2"
    xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
    xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.2"
        xmlns:client="http://www.mulesource.org/schema/mule/client/2.2"
        xsi:schemaLocation="
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd
       http://www.mulesource.org/schema/mule/file/2.2 http://www.mulesource.org/schema/mule/file/2.2/mule-file.xsd
       http://www.mulesource.org/schema/mule/ftp/2.2 http://www.mulesource.org/schema/mule/ftp/2.2/mule-ftp.xsd
       http://www.mulesource.org/schema/mule/http/2.2 http://www.mulesource.org/schema/mule/http/2.2/mule-http.xsd
       http://www.mulesource.org/schema/mule/jdbc/2.2 http://www.mulesource.org/schema/mule/jdbc/2.2/mule-jdbc.xsd
       http://www.mulesource.org/schema/mule/jms/2.2 http://www.mulesource.org/schema/mule/jms/2.2/mule-jms.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
       http://www.mulesource.org/schema/mule/stdio/2.2 http://www.mulesource.org/schema/mule/stdio/2.2/mule-stdio.xsd
       http://www.mulesource.org/schema/mule/client/2.2 http://www.mulesource.org/schema/mule/client/2.2/mule-client.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


    <!--
    TODO: You can define a test configuration here then from the XxxTestCase you can fire events into
    Mule (using the MuleClient) and then assert the results.
    -->
    <model name="main">

        <service name="testService">
            <inbound>
                <vm:inbound-endpoint path="in" synchronous="true"/>
            </inbound>

            <!-- TODO add your service component here. This can also be a Spring bean using <spring-object bean="name"/> -->
            <test:component appendString=" Received"/>

            <outbound>
                <pass-through-router>
                    <stdio:outbound-endpoint system="OUT"/>
                </pass-through-router>
            </outbound>
        </service>

    </model>

</mule>
